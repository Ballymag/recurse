% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getRecursions.R
\name{getRecursions}
\alias{getRecursions}
\title{Calculates recursion information from the trajectory}
\usage{
getRecursions(xyt, radius)
}
\arguments{
\item{xyt}{the trajectory data with three columns, x the x-coordinate, 
y the y-cordinate, and t the time}

\item{radius}{radius to use in units of the location data to detect recursions}
}
\value{
A list with several components. First, \code{revisits} is a vector of the same length as the xyt 
dataframe that gives the number of revisits for each location, where 1 means that there were 
no revisits, only the initial visit. Next, \code{dists} gives the distance matrix between
all ocations. Finally, \code{revisitStats} gives further statistics on each visit. These are calculated 
per location (i.e., no aggregation of nearby points is performed), and give the index and location
of the point of the track at the center of the radius, the radius entrace and exit time of the track for that 
visit, how much time was spent inside the radius, and how long since the last visit (NA for the first visit).
}
\description{
For each point in the trajectory, a circle of radius R is drawn around that point.
Then the number of segments of the trajectory passing through that circle is counted, this is
the number of revisits, so each point will have at least one revisit (the initial visit), For 
each revist, the time spent inside the circle is calculated, as well as the time since the last 
visit (NA for the first visit). In order to calculate the time values, the crossing time of the
radius is calucluated by assuming linear movement at a constant speed between the points inside
and outside the circle.
}

